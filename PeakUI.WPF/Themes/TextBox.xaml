<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:PeakUI.WPF.Converters" 
                    xmlns:peak="clr-namespace:PeakUI.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/PeakUI.WPF;component/Themes/Resources/Color.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/PeakUI.WPF;component/Themes/Resources/Size.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/PeakUI.WPF;component/Themes/Resources/Converter.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <converter:IsNullOrEmptyConverter x:Key="getIsNullOrEmptyConverter"></converter:IsNullOrEmptyConverter>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TransparentSolidColorBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBorderSolidColorBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Padding" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="150" />
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="IsInactiveSelectionHighlightEnabled" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="peak:TextBoxAttribute.Placeholder" Value=""></Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
        <Setter Property="peak:ControlAttribute.CornerRadius" Value="{DynamicResource CornerRadius3}" />
        <Setter Property="peak:ControlAttribute.FocusBorderBrush" Value="{DynamicResource LightBorderSolidColorBrush}" />
        <Setter Property="peak:ControlAttribute.MouseOverBrush" Value="{DynamicResource LightBorderSolidColorBrush}" />
        <Setter Property="peak:ControlAttribute.PrefixColor" Value="{DynamicResource InfoSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(peak:ControlAttribute.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <ContentControl x:Name="preContent" Grid.Column="0" Margin="3,0,3,0" 
                                            VerticalAlignment="Center" VerticalContentAlignment="Center"
                                            Content="{Binding Path=(peak:TextBoxAttribute.PreContent), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Foreground="{Binding Path=(peak:ControlAttribute.PrefixColor), RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                            <Grid Grid.Column="1"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ScrollViewer x:Name="PART_ContentHost" Padding="0" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                                <TextBlock x:Name="watermark"
                                               Margin="3 0" Opacity="{DynamicResource Un5Opcity}"
                                               Foreground="{TemplateBinding Foreground}"
                                               Text="{Binding Path=(peak:TextBoxAttribute.Placeholder), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>

                            <Button x:Name="clearButton" Visibility="Collapsed" Grid.Column="2" Background="{TemplateBinding Background}"  Focusable="False" Height="20" Margin="0,0,2,0" Cursor="Hand" BorderThickness="0">
                                <peak:Icon Type="CloseCircleLine" Opacity="{DynamicResource Un3Opcity}" Foreground="{TemplateBinding Foreground}"></peak:Icon>
                            </Button>

                            <ContentControl x:Name="postContent" Grid.Column="3" Margin="0,0,3,0"
                                            Height="{TemplateBinding Height}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{Binding Path=(peak:TextBoxAttribute.PostContent), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Foreground="{Binding Path=(peak:ControlAttribute.PrefixColor), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource Un5Opcity}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" Value="{StaticResource Un5Opcity}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(peak:ControlAttribute.MouseOverBrush), RelativeSource={RelativeSource AncestorType=TextBox}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=(peak:TextBoxAttribute.IsClearable), RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullOrEmptyConverter}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="clearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=(peak:TextBoxAttribute.IsClearable), RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullOrEmptyConverter}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="clearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullOrEmptyConverter}}" Value="False">
                            <Setter TargetName="watermark" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="PeakTextBox" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
         
    </Style>
    

    <!--  亮色文本框  -->
    <Style x:Key="PeakLightTextBox" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="peak:ControlAttribute.FocusedBrush" Value="{DynamicResource BrandSolidColorBrush}" />
    </Style>

    <!--  暗色文本框  -->
    <Style x:Key="PeakDarkTextBox" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="peak:ControlAttribute.FocusedBrush" Value="{DynamicResource BrandDarkSolidColorBrush}" />
    </Style>

    <!--  强调色文本框  -->
    <Style x:Key="PeakAccentTextBox" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="peak:ControlAttribute.FocusedBrush" Value="{DynamicResource DangerSolidColorBrush}" />
    </Style>

    <!--  大文本框  -->
    <Style x:Key="PeakBigTextBox" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Padding" Value="2 4" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="peak:ControlAttribute.FocusedBrush" Value="{DynamicResource BrandSolidColorBrush}" />
    </Style>

 
</ResourceDictionary>